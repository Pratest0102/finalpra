1.Write a Java Program to implement Command Design Pattern for Command Interface with 
execute() . Use this to create variety of commands for LightOnCommand, LightOffCommand, 
GarageDoorUpCommand, StereoOnWithCDComman.

Command.java
public interface Command {
 void execute();
}

Light.java
public class Light {
 public void turnOn() {
 System.out.println("Light is on");
 }
 public void turnOff() {
 System.out.println("Light is off");
 }
}

GarageDoor.java
public class GarageDoor {
 public void up() {
 System.out.println("Garage door is up");
 }
}

Stereo.java
public class Stereo {
 public void on() {
 System.out.println("Stereo is on");
 }
 public void setCD() {
 System.out.println("CD is set");
 }
 public void setVolume(int volume) {
 System.out.println("Volume set to " + volume);
 }
}

LightOnCommand.java
public class LightOnCommand implements Command {
 private Light light;
 public LightOnCommand(Light light) {
 this.light = light;
 }
 public void execute() {
 light.turnOn();
 }
}

LightOffCommand.java
public class LightOffCommand implements Command {
 private Light light;
 public LightOffCommand(Light light) {
 this.light = light;
 }
 public void execute() {
 light.turnOff();
 }
}

GarageDoorUpCommand.java
public class GarageDoorUpCommand implements Command {
 private GarageDoor garageDoor;
 public GarageDoorUpCommand(GarageDoor garageDoor) {
 this.garageDoor = garageDoor;
 }
 public void execute() {
 garageDoor.up();
 }
}

StereoOnWithCDCommand.java
public class StereoOnWithCDCommand implements Command {
 private Stereo stereo;
 public StereoOnWithCDCommand(Stereo stereo) {
 this.stereo = stereo;
 }
 public void execute() {
 stereo.on();
 stereo.setCD();
 stereo.setVolume(11);
 }
}

RemoteControlTest.java
public class RemoteControlTest {
 public static void main(String[] args) {
 SimpleRemoteControl remote = new SimpleRemoteControl();
 Light livingRoomLight = new Light();
 LightOnCommand livingRoomLightOn = new LightOnCommand(livingRoomLight);
 LightOffCommand livingRoomLightOff = new LightOffCommand(livingRoomLight);
 GarageDoor garageDoor = new GarageDoor();
 GarageDoorUpCommand garageDoorUp = new GarageDoorUpCommand(garageDoor);
 Stereo stereo = new Stereo();
 StereoOnWithCDCommand stereoOnWithCD = new StereoOnWithCDCommand(stereo);
 remote.setCommand(livingRoomLightOn);
 remote.pressButton();
 remote.setCommand(livingRoomLightOff);
 remote.pressButton();
 remote.setCommand(garageDoorUp);
 remote.pressButton();
 remote.setCommand(stereoOnWithCD);
 remote.pressButton();
 }
}

SimpleRemoteControl.java
public class SimpleRemoteControl {
 private Command slot;
 public void setCommand(Command command) {
 slot = command;
 }
 public void pressButton() {
 slot.execute();
 }
}



2. Write a python program to find all null values in a given dataset and remove them.
import pandas as pd
# Load the dataset from a CSV file
df = pd.read_csv('example_dataset.csv')
# Find and display null values in the dataset
print("Null values before removal:")
print(df.isnull().sum())
# Remove rows with null values
df = df.dropna()
# Save the cleaned dataset to a new CSV file
cleaned_file_path = 'cleaned_dataset.csv'
df.to_csv(cleaned_file_path, index=False)
print("Null values after removal:")
print(df.isnull().sum())
print(f"Cleaned dataset saved to {cleaned_file_path}")




3. Write node js script to interact with the filesystem, and serve a web page from a file .
const http = require('http');
const fs = require('fs');
const server = http.createServer((req, res) => {
 if (req.url === '/') {
 fs.readFile('path/to/your/html/file.html', 'utf8', (err, data) => {
 if (err) {
 console.error('Error reading file: ', err);
 res.writeHead(500, { 'Content-Type': 'text/html' });
 res.write('<h1>Internal Server Error</h1>');
 res.end();
 return;
 }
 res.writeHead(200, { 'Content-Type': 'text/html' });
 res.write(data);
 res.end();
 });
 }
});
const port = 3000;
server.listen(port, () => {
 console.log(`Server running on port ${port}`);
});




example_dataset.csv

Name, Age, Gender
Alice, 25, Female
Bob, , Male
Charlie, 30, Male
David, , Male
Eva, 28, Female

